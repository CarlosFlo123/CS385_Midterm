# -*- coding: utf-8 -*-
"""CS385_Midterm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aEBp7Z8NWBGc9SOj0jHkc6MWJZfmp-D1
"""

actualTime = int(input("Insert the time NOW: "))
alarm = int(input("How many hours you wanna sleep?: "))
tmp = actualTime #a temp variable so we dont mess up our original time
while alarm > 0.9:
  if tmp == 23:
    tmp = -1
  alarm -= 1
  tmp += 1
print("Alarm will wake you up at: " + str(int(tmp)) + ":00 hours.")

#OUTPUT:

def getGradeFromMark(mark): #will be a good idea to validate <0 and >100 cases
  if mark < 40:
    return 'F3'
  elif mark < 45:
    return 'F2'
  elif mark < 50:
    return 'F1 Supp'
  elif mark < 60:
    return "Third"
  elif mark < 70:
    return 'Second'
  elif mark < 75:
    return 'Upper Second'
  else:
    return 'First'
print("Lucas is getting a " + getGradeFromMark(43) + " in Python. While Carlos is " + getGradeFromMark(99))

#OUTPUT:

numbers = [12, 10, 32, 3, 66, 17, 42, 99, 20]
#a________________________________________
for number in numbers:
  print(number)

#OUTPUT:

#b_________________________________________
for number in numbers:
  print(str(number) + '\t' + str(pow(number, 2)))

#OUTPUT:

#c_________________________________________
total = 0
for number in numbers:
  total += number
print("The sum of the list is: " + str(total))

#OUTPUT:

#d_________________________________________
total = 1
for number in numbers:
  total *= number
print("The product of the list is: " + str(total))

#OUTPUT:

#4_____________________________________________
lst = []
for i in range(0, 20):
  lst.append(int(input("Insert a new number for the list: ")))

#OUTPUT:

#4-a_________________________________
odd_count = 0
for item in lst:
  if item % 2 != 0:
    odd_count += 1
print('There are ' + str(odd_count) + ' odd numbers in the list.')

#OUTPUT:

#4-b_________________________________
even_sum = 0
for item in lst:
  if item % 2 == 0:
    even_sum += item
print("The sum of the even numbers is: " + str(even_sum))

#OUTPUT:

#4-c__________________________________
negative_sum = 0
for item in lst:
  if item < 0:
    negative_sum += item
print("The sum of the negative numbers is: " + str(negative_sum))

#OUTPUT:

#4-d__________________________________
fiveLetterWordsCounter = 0
wordList = ['Python', 'Swift', 'R', 'C++++', 'Ruby', 'Cobol', 'Obj-C', 'C']
for word in wordList:
  if len(word) == 5:
    fiveLetterWordsCounter += 1
print("There are " + str(fiveLetterWordsCounter) + " five letter words in the list.")

#OUTPUT:

#4-e__________________________________
sum_without_first_even = 0
flag = 0 #used for exclude the first even number
for item in lst:
  if item % 2 == 0 and flag == 0: #n-1 useless iterations, might be a better solution
    flag = 1
  else:
    sum_without_first_even += item
print("The sum of the numbers without the first even number is: " + str(sum_without_first_even))

#OUTPUT:

#5-a__________________________________
#the order of the elements doesnt affect the output
#F.E 81%45 = 36
#    45%81 = 45
def gcd(x, y): 
    if(y == 0):
        return x
    else:
        return gcd(y, x%y) 
gcd(81, 45)

#OUTPUT:

#5-b__________________________________
def lcm(x, y): 
  return int(x*y / gcd(x, y)) #because both numbers are divisible by the result of (gcd(x, y))
lcm(2, 3)

#OUTPUT:

#6____________________________________
def replacingWords(s, old, new):
  print(s.replace(old, new))
s = "R is so versatile, R has many math libraries. R is so cool. Dont mess up with indentation in R."
replacingWords(s, "R", "Python")

#OUTPUT: